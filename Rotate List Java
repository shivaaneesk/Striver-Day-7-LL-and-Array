/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if (head == null || head.next == null || k == 0) {
            return head;
        }

        ListNode ptr = head;
        ListNode newhead = head;
        int count = 1;
        
        while (ptr.next != null) {
            count++;
            ptr = ptr.next;
        }
        
        ptr.next = head;
        int change = k % count;
        int i = 0;
        
        while (i < (count - change - 1)) {
            newhead = newhead.next;
            i++;
        }
        
        ListNode temp = newhead;
        newhead = newhead.next;
        temp.next = null;
        
        return newhead;
    }
}
